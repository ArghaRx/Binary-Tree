/// https://leetcode.com/problems/binary-tree-tilt/description/


 import java.util.*;
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int findTilt(TreeNode root) {
        if(root == null) return 0;
        int leftsum = sum(root.left);
        int rightsum = sum(root.right);
        int substract = Math.abs(leftsum - rightsum);
        root.val = substract;
        findTilt(root.left);
        findTilt(root.right);
        return (root.val + sum(root.left) + sum(root.right));     
    }
    public int sum(TreeNode root)
    {
        if(root == null) return 0;
        return root.val + sum(root.left) + sum(root.right);
    }
}
