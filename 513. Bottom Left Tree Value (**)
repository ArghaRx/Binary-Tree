/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 *////////find the left boundary then store in a list ans and we have to find out the last element of the list
class Solution {
    public int findBottomLeftValue(TreeNode root) {
        List<Integer> ans = new ArrayList<>();
        func(root,ans,0);
        return ans.get(ans.size() - 1);
    }
    public void func(TreeNode root , List<Integer> ans , int level)
    {
        if(root == null) return;
        if(level == ans.size()) ans.add(root.val);
        func(root.left,ans,level+1);
        func(root.right,ans,level+1);
    }
    }
